<!--
// * description: 汽车销售开票
// * author: lixb
// * createdDate: 2019-10-21
-->
<template>
  <div class="app-container app-container-table po-rel">
    <one-table-template
      ref="multipleTable"
      :dynamicButtons="tableButtons"
      :dynamicComponents="tableComponents"
      :dynamicApiConfig="apiConfig"
      :dynamicTableCols="tableCols"
      :dynamicFormFields="formField"
      :dynamicIsShowSelect="false"
      :dynamicIsShowMoreBtn="false"
    />
    <div class="comp-right filter-params">
      <el-row>
        <el-col :span="24" class="table-col">
          <component
            v-for="comp in tableComponentRight.filter(o => o.isMust === true)"
            :ref="comp.isRequire ? comp.isRequire+ comp.compKey : comp.compKey"
            :key="comp.compKey"
            :codeField="comp.codeField"
            :textField="comp.textField"
            :popupsKey="comp.compKey"
            :is="comp.component"
            :isShow="comp.isShow || true"
            :code="formFieldRight[comp.codeField]"
            :disabled="comp.disabled"
            :span="comp.span || 20"
            :labelName="comp.labelName"
            :lookuptype="comp.lookuptype"
            :inputType="comp.inputType"
            :dateOptionsType="comp.dateOptionsType"
            :dateType="comp.dateType"
            :clearable="comp.clearable"
            :filterable="comp.filterable"
            :parentFileds="comp.parentFileds || ''"
            :mustFields="comp.mustFields || ''"
            :returnCodeField="comp.returnCodeField"
            :returnTextField="comp.returnTextField"
            :otherField="comp.otherField"
            :validrule="comp.validrule"
            :isUseDefault="comp.isUseDefault"
            :isHost="comp.isHost"
            :oFields="comp.oFields"
          ></component>
        </el-col>
      </el-row>
      <div class="filter-container filter-button btnRight" ref="searcheHeight">
        <el-button
          v-for="comp in tableButtonRight"
          :key="comp.compKey"
          :type="comp.type"
          @click="comp.clickEvent"
        >{{comp.text}}</el-button>
      </div>
    </div>
    <edit
      :popupsState="editPopupsState"
      :dynamicEditRowData="editRowData"
      :popupsVisible="editPopupsVisible"
      :key="editPopupsKey"
      @close="close"
    ></edit>
    <make-invoice :key="showToView" :handleVisible="toViewd" :clickRows="rowsData"></make-invoice>
    <ve-open :key="showToView2" :handleVisible="toViewd2" :clickRows="rowsData"></ve-open>
  </div>
</template>
<script>
import { oneTableWithViewTemplateMixins } from "@/components/mixins/oneTableWithViewTemplateMixins";
import { veApis } from "@/api/graphQLApiList/ve";
import { CacheConfig } from "@/cache/configCache/index";
import { requestGraphQL } from "@/api/commonRequest";
import { contsMixins } from "@/components/mixins/contsMixins";
import { formMixins } from "@/components/mixins/formMixins";
import OneTableTemplate from "@/components/templates/oneTable";
import Edit from "./edit";
import makeInvoice from "./makeInvoice";
import veOpen from "./veOpen";

export default {
  name: "carSalesInvoice",
  // 组件混入对象
  mixins: [contsMixins, formMixins, oneTableWithViewTemplateMixins],
  components: {
    OneTableTemplate,
    Edit,
    makeInvoice,
    veOpen
  },
  // 阻塞路由预加载网格中组件的数据
  beforeRouteEnter(to, from, next) {
    CacheConfig.initData(to.path, function() {
      next();
    });
  },
  data() {
    return {
      // 网格查询API配置对象
      apiConfig: veApis.veContractQry,
      //
      toViewd: false,
      toViewd2: false,
      showToView: "a",
      showToView2: "b",
      clickRowsData: {},
      rowsData: {},
      // 动态组件-按钮
      tableButtons: [
        {
          compKey: "btnKey1",
          type: "primary",
          size: "small",
          clickEvent: () => this.queryTable(1),
          text: "查询"
        },
        {
          compKey: "btnKey2",
          type: "",
          size: "small",
          clickEvent: () => this.checkIn(),
          text: "号码登记"
        },
        {
          compKey: "btnKey3",
          type: "",
          size: "small",
          clickEvent: () => this.cancellation(),
          text: this.$t("ve.label.cancellation")
        }, //作废
        {
          compKey: "btnKey4",
          type: "",
          size: "small",
          clickEvent: () => this.exportExcel(),
          text: this.$t("sys.button.export")
        }
      ],
      // 右
      tableButtonRight: [
        {
          compKey: "btnKey5",
          type: "",
          size: "small",
          clickEvent: () => this.showView(),
          text: "增值税开票"
        },
        {
          compKey: "btnKey6",
          type: "",
          size: "small",
          clickEvent: () => this.showView2(),
          text: "机动车开票"
        },
        {
          compKey: "btnKey7",
          type: "",
          size: "small",
          clickEvent: () => this.save(),
          text: this.$t("sys.button.save")
        } //作废
      ],
      tableComponentRight:
        CacheConfig.cacheData[this.$route.path] &&
        CacheConfig.cacheData[this.$route.path].tableComponents.length > 0
          ? CacheConfig.cacheData[this.$route.path].tableComponents
          : [
              {
                compKey: "compKey1",
                labelName: "合同编号",
                disabled: true,
                codeField: "saleContractCode",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              },
              {
                compKey: "compKey2",
                labelName: "购买车型",
                disabled: true,
                codeField: "carTypeCode",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              },
              {
                compKey: "compKey3",
                labelName: "客户名称",
                codeField: "buyCustName",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              }, // 客户名称
              {
                compKey: "compKey4",
                labelName: "整车销售价",
                disabled: true,
                codeField: "factPrice",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              }, // 整车销售价
              {
                compKey: "compKey5",
                labelName: "标准开票价",
                disabled: true,
                codeField: "lowInvoicePrice",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              }, // 整车销售价
              {
                compKey: "compKey6",
                labelName: "VIN码",
                codeField: "vin",
                disabled: true,
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              },
              {
                compKey: "compKey7",
                labelName: "发票类别",
                codeField: "invoiceType",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              },
              {
                compKey: "compKey8",
                labelName: "发票价格",
                codeField: "invoicePrice",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              },
              {
                compKey: "compKey9",
                labelName: "发票号码",
                codeField: "invoiceNo",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              },
              {
                compKey: "compKey10",
                labelName: "发票日期",
                codeField: "invoiceDate",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              }
            ],
      // 动态组件-查询条件
      tableComponents:
        CacheConfig.cacheData[this.$route.path] &&
        CacheConfig.cacheData[this.$route.path].tableComponents.length > 0
          ? CacheConfig.cacheData[this.$route.path].tableComponents
          : [
              {
                compKey: "compKey11",
                labelName: "客户名称",
                span: 8,
                codeField: "buyCustName",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              }, // 客户名称
              {
                compKey: "compKey12",
                labelName: "发票状态",
                span: 8,
                codeField: "invoiceState",
                lookuptype: "VE0026",
                component: () => import("@/components/org/LookupValue"),
                type: "dropdownList",
                isMust: true
              },
              {
                compKey: "compKey3",
                labelName: "VIN码",
                span: 8,
                codeField: "vin",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              },
              {
                compKey: "compKey4",
                labelName: "销售合同号",
                span: 8,
                codeField: "saleContractCode",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              },
              {
                compKey: "compKey5",
                labelName: "销售类型",
                span: 8,
                codeField: "saleOrderType",
                lookuptype: "VE0026",
                component: () => import("@/components/org/LookupValue"),
                type: "dropdownList",
                isMust: true
              },
              // 销售顾问
              {
                compKey: "compKey7",
                labelName: "销售顾问",
                span: 8,
                codeField: "caEmpId",
                component: () => import("@/components/org/userSelect"),
                type: "propus",
                isMust: true
              },
              // 合同日期
              {
                compKey: "compKey8",
                labelName: "收款日期",
                span: 8,
                codeField: "invoiceApplyDateBegin",
                component: () =>
                  import("@/components/org/datePicker/datePicker"),
                type: "datePicker",
                isMust: true
              },
              {
                compKey: "compKey9",
                labelName: "至",
                span: 8,
                codeField: "invoiceApplyDateEnd",
                component: () =>
                  import("@/components/org/datePicker/datePicker"),
                type: "datePicker",
                isMust: true
              },
              //发票号码
              {
                compKey: "compKey10",
                labelName: "发票号码",
                span: 8,
                codeField: "invoiceNo",
                component: () => import("@/components/org/commonInput"),
                type: "inputText",
                isMust: true
              }
            ],
      // 动态生成网格列
      tableCols:
        CacheConfig.cacheData[this.$route.path] &&
        CacheConfig.cacheData[this.$route.path].tableCols.length > 0
          ? CacheConfig.cacheData[this.$route.path].tableCols
          : [
              {
                prop: "saleContractCode",
                label: "销售合同",
                width: 120,
                align: "center"
              },
              {
                prop: "invoiceState",
                label: "开票状态", //缺失
                width: 120,
                align: "center"
              },
              {
                prop: "saleTypeId",
                label: "销售类型",
                width: 120,
                hidden: true,
                align: "center"
              },
              {
                prop: "saleTypeName",
                label: "销售类型",
                width: 120,
                align: "center"
              },
              {
                prop: "vin",
                label: "VIN码",
                width: 150,
                hidden: true,
                align: "center"
              },
              {
                prop: "carTypeCode",
                label: "车型编码",
                width: 120,
                hidden: true,
                align: "center"
              },
              {
                prop: "carConfigCode",
                label: "购买车型",
                width: 120,
                // hidden: true,
                align: "center"
              },
              {
                prop: "carConfigName",
                label: "车型配置名称",
                width: 120,
                hidden: true,
                align: "center"
              },
              {
                prop: "carConfigId",
                label: "车型配置ID",
                width: 120,
                hidden: true,
                align: "center"
              },
              {
                prop: "invoiceType",
                label: "发票类型",
                width: 120,
                align: "center"
              },
              {
                prop: "invoiceNo",
                label: "发票号码", //缺失
                width: 140,
                align: "center"
              },
              {
                prop: "invoicePrice", //缺失
                label: "发票金额",
                width: 120,
                align: "center"
              },
              {
                prop: "lowInvoicePrice",
                label: "开票限制价", //缺失
                width: 120,
                align: "center"
              },
              {
                prop: "invoiceDate",
                label: "开票日期", //缺失
                width: 120,
                align: "center"
              },
              {
                prop: "caEmpId",
                label: "销售顾问ID",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "caEmpName",
                label: "销售顾问",
                width: 120,
                align: "center"
              },
              {
                prop: "invoiceEmpName",
                label: "开票人",
                width: 120,
                align: "center"
              },
              {
                prop: "remark",
                label: "是否转凭证",
                width: 120,
                align: "center"
              },
              {
                prop: "updateControlId",
                label: "并发ID",
                width: 120,
                align: "center",
                hidden: true
              },
              // 预请求,代确认
              {
                prop: "monad",
                label: "单位",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "num",
                label: "数量",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "税率",
                label: "并发ID",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "paid",
                label: "税额",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "shiji",
                label: "税后",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "daxie",
                label: "大写",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "address",
                label: "地址",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "CLLX",
                label: "车辆类型",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "CPXH",
                label: "厂牌型号",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "CD",
                label: "产地",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "HGZH",
                label: "合格证号",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "JKSMS",
                label: "进口说明书",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "SJDH",
                label: "商检单号",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "SFZ",
                label: "商检单号",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "FDJHM",
                label: "发动机号码",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "CLSBH",
                label: "车辆识别号",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "SCQYMC",
                label: "生产企业名称",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "bankName",
                label: "银行",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "bankNo",
                label: "卡号",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "XHDWMC",
                label: "销货单位名称",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "NSRSBH",
                label: "纳税人识别号",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "tel",
                label: "电话",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "ZSZSE",
                label: "增值税余额",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "DW",
                label: "吨位",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "XCRS",
                label: "限承人数",
                width: 120,
                align: "center",
                hidden: true
              },
              {
                prop: "ZGSWJG",
                label: "主管税务机关",
                width: 120,
                align: "center",
                hidden: true
              }
            ],

      //表单查询数据

      formField: {
        stationName: ""
        // stationCode: "",
        // isEnable: ""
      },
      formFieldRight: {}
    };
  },
  methods: {
    cancellation() {
      const that = this.$refs.multipleTable;
      let saveState = true;
      let saveCount = 0;
      let msg = "";
      const queryObj = {
        // 保存mutation
        type: "mutation",
        // api配置
        apiConfig: veApis.veDelorder,
        variables: {
          // 当前中台使用的名称有dataInfo、info，具体查看API文档
          dataInfo: {
            carBrandCode: ""
          }
        }
      };
      // 转换了中台请求格式数据
      var paramD = this.$getParams(queryObj);
      // 调用中台API方法（可复用）
      this.$requestGraphQL(paramD).then(response => {
        if (response.data.vecldbsqOutConfirm.result === "1") {
          // 保存成功
          this.$message({
            message: "作废成功",
            type: "success",
            uration: 2000
          });
        } else {
          // 保存失败
          this.$message({
            message: "作废失败",
            type: "warn",
            uration: 2000
          });
        }
        this.queryTable(1);
      });
    },
    checkIn() {
      this.showEdit();
    },
    showView() {
      // if (
      //   this.formFieldRight.saleContractCode != "" &&
      //   this.formFieldRight.saleContractCode != undefined
      // ) {
        const that = this.$refs.multipleTable;
        this.rowsData = this.formFieldRight;
        this.toViewd = true;
        this.showToView = this.showToView + "1";
      // }
    },
    showView2() {
      // if (
      //   this.formFieldRight.saleContractCode != "" &&
      //   this.formFieldRight.saleContractCode != undefined
      // ) {
        const that = this.$refs.multipleTable;
        this.rowsData = this.formFieldRight;
        this.toViewd2 = true;
        this.showToView2 = this.showToView2 + "1";
      // }
    }
  },
  watch: {
    clickRowsData(curVal, oldVal) {
      this.formFieldRight = curVal;
      this.rowsData = curVal;
    }
  }
};
</script>
<style lang="scss" scoped>
/deep/.po-rel {
  position: relative;
}

/deep/.filter-params {
  width: 72% !important;
}
/deep/.filter-title {
  width: 72% !important;
}
/deep/.el-table {
  width: 72% !important;
}
/deep/.el-pagination.is-background {
  width: 72% !important;
}
/deep/.filter-params .table-col .el-col {
  margin-bottom: 8px;
}
/deep/.comp-right {
  position: absolute;
  background: #fff;
  top: 49px;
  right: 0px;
  width: 26.5% !important;
  overflow: hidden;
  height: 89.8%;
  margin-right: 10px;
}

// /deep/.btnRight{
//   text-align: center !important;
// }
</style>
