<template>
  <section>
    <el-dialog title="备件选择" :visible.sync="dialogFormVisible" width="80%" @close="sendCode" :append-to-body="true" :close-on-click-modal="false">
      <div class="filter-container filter-params">
        <el-row :gutter="26">
          <LookupValue :span="6" :isMul="false" :isShowLabel="true" :code="orderTypeBrand" :lookuptype="listQuery.lookuptypeBrand" :labelName="labelNameBrand" @changeCode="getLookupValueBrand" />
          <el-col :span="6">
            <label>备件号</label>
            <el-input size="small" v-model="listQuery.partNoVal" />
          </el-col>
          <el-col :span="6">
            <label>备件名称</label>
            <el-input size="small" v-model="listQuery.partNameVal" />
          </el-col>
          <el-col :span="6">
            <el-button @click="fetchData()" type="primary">查询</el-button>
            <el-button @click="sendCodeChoose">选择</el-button>
            <el-button @click="reset">重置</el-button>
          </el-col>
          <el-col :span="6">
            <label>供应商编码</label>
            <el-input size="small" v-model="listQuery.supplierVal" />
          </el-col>
          <LookupValue :span="6" :isMul="false" :isShowLabel="true" :code="listQuery.isButyVal" :lookuptype="listQuery.lookupIsButyVal" :labelName="labelIsButyVal" @changeCode="getLookupIsButyVal" />
          <el-col :span="6">
            <el-checkbox label="是否显示零库存" v-model="listQuery.notShowZero" @change="getNotShowZero"></el-checkbox>
          </el-col>
        </el-row>
      </div>
      <div class="filter-container filter-title">查询结果</div>
      <el-table :data="list" v-loading="listLoading" border fit highlight-current-row @row-click="handleChange" ref="tableList">
        <el-table-column property="num" label="序号" width="60" align="center">
          <template slot-scope="scope">{{ scope.$index + 1 }}</template>
        </el-table-column>
        <!-- <el-table-column property="choosenum" type="selection" label="选择+" width="150"></el-table-column> -->
        <el-table-column prop="partBrandName" label="备件品牌" align="center">
          <template slot-scope="scope">{{ scope.row.partBrandName }}</template>
        </el-table-column>
        <el-table-column prop="partno" label="备件号" align="center">
          <template slot-scope="scope">{{ scope.row.partNo }}</template>
        </el-table-column>
        <el-table-column prop="partname" label="备件名称" align="center">
          <template slot-scope="scope">{{ scope.row.partName }}</template>
        </el-table-column>
        <el-table-column prop="partstatename" label="备件状态" align="center">
          <template slot-scope="scope">{{ scope.row.partStateName }}</template>
        </el-table-column>
        <el-table-column prop="dlrorderswitch" label="备件开关" align="center">
          <template slot-scope="scope">{{ scope.row.dlrOrderSwitch }}</template>
        </el-table-column>
      </el-table>
      <el-pagination background ref="paginationHeight" layout="prev, pager, next, sizes, ->, total" prev-text="上一页" next-text="下一页" :page-sizes="[10, 20, 30]" :page-size="10" :total="listQuery.pageTotal" @size-change="pageSizeChange" @current-change="pageIndexChange" />
    </el-dialog>
  </section>
</template>
<script>
import { paDbPartListQuerySelectPartNo } from '@/api/pa/paDbVarietyMutation1'
import { paApis } from '@/api/graphQLApiList/pa'
import { requestGraphQL } from '@/api/commonRequest'
import LookupValue from '@/components/org/LookupValue'
export default {
  props: {
    dialogFormVisible: {
      type: Boolean,
      default: function() {
        return false
      }
    }
  },
  components: {
    LookupValue
  },
  data() {
    return {
      list: null,
      row: '',
      codeInside: {
        code: [],
        name: [],
        partName: []
      },
      listLoading: false,
      labelNameBrand: '备件品牌',
      labelIsButyVal: '是否精品',
      orderTypeBrand: '',
      listQuery: {
        partNoVal: '', //备件号
        partNameVal: '', //备件名称
        supplierVal: '', //供应商编码
        isButyVal: '', //是否是精品
        lookuptypeBrand: 'PA0008',
        lookupIsButyVal: 'DB0064',
        notShowZero: '',
        pageIndex: 1,
        pageSize: 10,
        pageTotal: 0
      }
    }
  },
  methods: {
    fetchData(page) {
      const that = this
      var formField = {
        partBrandCode: this.listQuery.orderTypeBrand,
        partNo: this.listQuery.partNoVal,
        partName: this.listQuery.partNameVal,
        isRefine: this.listQuery.isButyVal,
        isShowZoreStorage: this.listQuery.notShowZero == true ? '1' : '0',
        supplierCode: this.listQuery.supplierVal
      }
      let queryObj = {
        // api配置
        // apiConfig: paApis.paDbPartListQueryFindAll,
        // 请求类型&参数 保存mutation  查询query
        type: 'query',
        typeParam:
          '( $dataInfo: ' +
          paApis.paDbPartListQueryFindAll.InputType +
          ',  $pageIndex: Int, $pageSize: Int)',
        // 请求API
        apiUrl: paApis.paDbPartListQueryFindAll.APIUrl,
        // 需要调用的API服务配置
        apiServices: [
          {
            // API服务编码&参数
            apiServiceCode: paApis.paDbPartListQueryFindAll.ServiceCode,
            apiServiceParam:
              '(dataInfo: $dataInfo, pageIndex: $pageIndex, pageSize: $pageSize)',
            //表格中台返回网格的字段
            apiQueryRow: [
              'costPrice',
              'dlrLeastSaleQty',
              'dlrOrderSwitch',
              'dlrPrice',
              'elementCode',
              'elementId',
              'elementNameCn',
              'emphasisFlag',
              'emphasisFlagName',
              'fitCarTypeId',
              'isPvRequired',
              'isPvRequiredName',
              'lastUpdatedDate',
              'leastPackIn',
              'leastPackOut',
              'logisticsFlag',
              'logisticsFlagName',
              'partBrandCode',
              'partBrandName',
              'partFlowState',
              'partId',
              'partName',
              'partNo',
              'partStateName',
              'partTypeCode',
              'partTypeId',
              'partTypeName',
              'partVarietyName',
              'partWeight',
              'planPrice',
              'pubCarTypeCode',
              'pubCarTypeName',
              'purStateName',
              'pvPurSwitch',
              'remark',
              'replaceCode',
              'replaceId',
              'replacePartNo',
              'saleStateName',
              'stockStateName',
              'storeSwitch',
              'supplierCode',
              'supplierId',
              'transitLimit',
              'transitLimitName',
              'unit',
              'updateControlId'
            ]
          }
        ],
        //条件/实体参数（变量），根据typeParam中的定义配置
        variables: {
          pageSize: that.listQuery.pageSize,
          pageIndex: page || that.listQuery.pageIndex,
          //当前中台使用的名称有dataInfo、info，具体查看API文档
          dataInfo: formField
        }
      }
      this.listLoading = true
      //转换了中台请求格式数据
      var paramD = that.$getParams(queryObj)
      // 调用中台API方法（可复用）
      requestGraphQL(paramD).then(response => {
        if (
          response.data[paApis.paDbPartListQueryFindAll.ServiceCode].result ===
          '1'
        ) {
          if (page) {
            //查询完返回指定的page页数
            that.listQuery.pageIndex = page
          }
          that.listQuery.pageTotal =
            response.data[paApis.paDbPartListQueryFindAll.ServiceCode].records
          that.list =
            response.data[paApis.paDbPartListQueryFindAll.ServiceCode].rows
          that.listLoading = false
        } else if (
          response.data[paApis.paDbPartListQueryFindAll.ServiceCode].rows != ''
        ) {
          this.listLoading = false
        }
      })
    },
    reset() {
      this.listQuery.partBrandVal = ''
      this.listQuery.partNoVal = ''
      this.listQuery.partNameVal = ''
      this.listQuery.supplierVal = ''
      this.listQuery.isButyVal = ''
      this.orderTypeBrand = ''
    },
    getLookupValueBrand(val) {
      this.listQuery.orderTypeBrand = val
      this.orderTypeBrand = this.listQuery.orderTypeBrand
    },
    //选择table中的内容
    handleChange(val) {
      this.codeInside.code = val.partId
      this.codeInside.name = val.partNo
      this.codeInside.partName = val.partName
      this.codeInside.row = val
      this.row = val
    },
    sendCode() {
      this.$emit('changeCode', this.codeInside)
      this.reset()
      this.list = ''
    },
    //选择传值给父组件
    sendCodeChoose() {
      if (this.row.length == 0) {
        this.$alert('请选择一条数据', '提示', {
          confirmButtonText: '确定'
        })
      } else {
        this.$emit('changeCode', this.codeInside)
      }
    },
    pageSizeChange(val) {
      this.listQuery.pageSize = val
      this.fetchData()
    },
    pageIndexChange(val) {
      this.listQuery.pageIndex = val
      this.fetchData()
    },
    getNotShowZero(val) {
      this.listQuery.notShowZero = val
    },
    getLookupIsButyVal(val) {
      this.listQuery.isButyVal = val
    }
  }
}
</script>
