<!--
* description: 内饰色维护弹窗
* author: luojx
* createdDate: 2019-08-02
-->
<template>
  <section class="carTypeConfig">
    <el-dialog
      :title="$t('org.label.textMap1.carTypeAndInColor')"
      :visible.sync="curdialogVisible"
      width="1000px"
      center
      @close="sendCode"
      :close-on-click-modal="false"
      :append-to-body="true"
      @open="query"
    >
      <one-table-template
        ref="multipleTable"
        :dynamicButtons="tableButtons"
        :dynamicComponents="tableComponents"
        :dynamicApiConfig="apiConfig"
        :dynamicTableCols="tableCols"
        :dynamicFormFields="formField"
        :dynamicIsInitTable="true"
      />
      <IncolorEdit
        :dynamicEditRowData="editRowData"
        :popupsVisible="editPopupsVisible"
        :key="editPopupsKey"
        :popupsState="editPopupsState"
        @close="close"
      />
    </el-dialog>
  </section>
</template>
<script>
import { oneTableWithViewTemplateMixins } from "@/components/mixins/oneTableWithViewTemplateMixins";
import { valueObjectMixins } from "@/components/mixins/valueObjectMixins";
import { orgApis } from "@/api/graphQLApiList/org";
import { requestGraphQL } from "@/api/commonRequest";
import OneTableTemplate from "@/components/templates/popupsOneTable";
import IncolorEdit from "./inColorEdit";

export default {
  // 组件混入对象：{data[listQuery] methods[queryTable]}
  mixins: [oneTableWithViewTemplateMixins, valueObjectMixins],
  components: {
    OneTableTemplate,
    IncolorEdit
  },
  props: {
    dialogVisible: {
      type: Boolean,
      default: false
    },
    editData: {
      type: Object,
      default: function() {
        return {};
      }
    }
  },

  data() {
    return {
      // 网格查询API配置对象
      apiConfig: orgApis.mdmCarTypeIncolorQueryListForPage,
      curdialogVisible: this.dialogVisible,
      // 保存用
      saveFormField: {
        // carBrandCode:"",
        carTypeIncolorId: "",
        carIncolorId: "",
        carConfigId: "",
        // supplyColorPrice: "",
        isEnable: ""
      },
      //表单查询数据（查询条件）
      formField: {
        // carBrandCode:"",
        // carIncolorId: "",
        // smallCarTypeId:"",
        // isEnable: "",
        // // carIncolorId:this.value,
        // carIncolorCode:"",
        // carIncolorName:"",
        // supplyColorPrice: ""

        carTypeIncolorId: "",
        carIncolorId: "",
        carConfigId: "",
        // supplyColorPrice: "",
        isEnable: ""

        // carConfigId: 1
      },
      listQuery: {
        carIncolorId: "",
        carIncolorCode: "",
        supplyColorPrice: "",
        carIncolorName: "",
        isEnable: ""
      },

      // 动态组件-按钮
      tableButtons: [
        {
          compKey: "btnKey1",
          type: "primary",
          size: "small",
          clickEvent: () => this.queryTable(1),
          text: this.$t("sys.button.query")
        },
        {
          compKey: "btnKey2",
          size: "small",
          clickEvent: () => this.add(),
          text: this.$t("sys.button.add")
        },
        {
          compKey: "btnKey3",
          type: "",
          size: "small",
          clickEvent: () => this.enable(1),
          text: this.$t("sys.button.enable")
        },
        {
          compKey: "btnKey4",
          type: "",
          size: "small",
          clickEvent: () => this.disable(0),
          text: this.$t("sys.button.disable")
        }
      ],
      // 动态组件-查询条件
      tableComponents: [
        // {
        //   compKey: "compKey4",
        //   labelName: "品牌",
        //   codeField: "carBrandCode",
        //   component: () => import("@/components/org/carBrand/carBrand"),
        //   type: "dropdownList",
        //   isMust: false
        // },
        // 车型配置
        {
          compKey: "compKey6",
          labelName: this.$t("org.label.carConfig"),
          codeField: "carConfigId",
          component: () => import("@/components/org/commonInput"),
          type: "inputText",
          disabled: true,
          hidden: true,
          isMul: false,
          isMust: true
        },
        {
          compKey: "compKey8",
          labelName: this.$t("org.label.carIncolor"),
          codeField: "carIncolorId",
          parentFileds: "carConfigId",
          mustFields: "carConfigId",
          component: () => import("@/components/org/InColor"),
          type: "dropdownList",
          filterable: true,
          isMust: true
        }, // 内饰色
        {
          compKey: "compKey2",
          labelName: this.$t("org.label.isEnableCn") /*是否启用*/,
          codeField: "isEnable",
          component: () => import("@/components/org/isEnable/isEnable"),
          type: "dropdownList",
          isMust: true
        }
        // {
        //   compKey: "compKey3",
        //   labelName: this.$t("org.label.inColorPrice") /*内饰价*/,
        //   codeField: "supplyColorPrice",
        //   component: () => import("@/components/org/commonInput"),
        //   type: "inputText",
        //   isMust: false
        // }
      ],
      // 动态生成网格列
      tableCols: [
        {
          prop: "mdmCarIncolorExtend.carIncolorCode",
          label: "内饰色编码" /*内饰色编码*/,
          width: null,
          align: "center"
        },
        {
          prop: "mdmCarIncolorExtend.carIncolorName",
          label: this.$t("org.label.carIncolorName") /*内饰颜色名称*/,
          width: null,
          align: "center"
        },
        {
          prop: "supplyColorPrice",
          label: this.$t("org.label.inColorPrice") /*内饰价*/,
          width: null,
          align: "center"
        },
        {
          prop: "isEnable",
          label: this.$t("org.label.isEnable"),
          width: null,
          align: "center"
        } /*启用状态*/,
        {
          prop: "carConfigId",
          label: "车型配置ID",
          width: null,
          align: "center",
          hidden: true
        },
        {
          prop: "carIncolorId",
          label: "内饰色ID",
          width: null,
          align: "center",
          hidden: true
        },
        {
          prop: "carTypeIncolorId",
          label: "车型配置内饰关系ID",
          width: null,
          align: "center",
          hidden: true
        },
        {
          prop: "updateControlId",
          label: "并发控制字段",
          width: null,
          align: "center",
          hidden: true
        }
      ]
    };
  },
  created(){
    debugger
    this.formField.carConfigId = this.editData.carConfigId || ""},
  
  // mounted(){
  //   this.queryTable(1)
  // },
  methods: {
    query() {
      this.queryTable1();
    },
    queryTable1() {
      const that = this;

      // this.saveObj.carConfigId = this.$refs.$parent.getCarConfig();

      const queryObj = {
        // 保存mutation
        type: "query",
        // 保存API配置对象
        apiConfig: orgApis.mdmCarTypeIncolorQueryListForPage,
        // 条件/实体参数（变量），根据typeParam中的定义配置
        variables: {
          // 当前中台使用的名称有dataInfo、info，具体查看API文档
          dataInfo: this.saveFormField
        }
      };
      // 转换了中台请求格式数据
      var paramD = this.$getParams(queryObj);
      // 调用中台API方法（可复用）
    },
    enable(val) {
      // console.log("!!!!!!!!!!!!!!!!!w");
      // console.log(this.$parent.currentRow);
      const that = this.$refs.multipleTable;
      let saveState = true;
      let saveCount = 0;
      let msg = "";

      let selectData = that.$refs.multipleTable.selection;
      if (selectData.length < 1) {
        that.$message({
          message: this.$t(
            "org.label.MSG.selectEnableInColor"
          ) /*请选择需要启用的内饰色颜色*/,
          type: "warning",
          duration: 2000
        });
        return;
      }
      for (var k in selectData) {
        let queryObj = {
          // 保存mutation
          type: "mutation",
          // api配置
          apiConfig: orgApis.mdmCarTypeIncolorMutationSave,
          variables: {
            //当前中台使用的名称有dataInfo、info，具体查看API文档
            dataInfo: {
              isEnable: "1",
              // carIncolorName: selectData[k].carIncolorName,
              supplyColorPrice: selectData[k].supplyColorPrice,
              carConfigId: selectData[k].carConfigId,
              carIncolorId: selectData[k].carIncolorId,
              carTypeIncolorId: selectData[k].carTypeIncolorId,
              updateControlId: selectData[k].updateControlId
            }
          }
        };
        //转换了中台请求格式数据
        var paramD = that.$getParams(queryObj);
        // 调用中台API方法（可复用）
        that.$requestGraphQL(paramD).then(response => {
          if (response.data[queryObj.apiConfig.ServiceCode].result === "1") {
            saveCount++;
          } else {
            saveState = false;
            msg = response.data[queryObj.apiConfig.ServiceCode].msg;
            that.$message({
              message: msg,
              type: "warning",
              duration: 2000
            });
          }
          if (saveCount == selectData.length) {
            that.$message({
              message: this.$t("org.label.MSG.enableSuccess") /*启用成功*/,
              type: "success",
              duration: 2000
            });
            that.queryTable(1);
          }
        });
      }
    },
    disable(val) {
      const that = this.$refs.multipleTable;
      let saveState = true;
      let saveCount = 0;
      let msg = "";

      let selectData = that.$refs.multipleTable.selection;
      if (selectData.length < 1) {
        that.$message({
          message: this.$t(
            "org.label.MSG.selectDisableInColor"
          ) /*请选择需要停用的内饰色颜色*/,
          type: "warning",
          duration: 2000
        });
        return;
      }
      for (var k in selectData) {
        let queryObj = {
          // 保存mutation
          type: "mutation",
          // api配置
          apiConfig: orgApis.mdmCarTypeIncolorMutationSave,
          variables: {
            //当前中台使用的名称有dataInfo、info，具体查看API文档
            dataInfo: {
              isEnable: "0",
              // carIncolorName: selectData[k].carIncolorName,
              supplyColorPrice: selectData[k].supplyColorPrice,
              carConfigId: selectData[k].carConfigId,
              carIncolorId: selectData[k].carIncolorId,
              carTypeIncolorId: selectData[k].carTypeIncolorId,
              updateControlId: selectData[k].updateControlId
            }
          }
        };
        //转换了中台请求格式数据
        var paramD = that.$getParams(queryObj);
        // 调用中台API方法（可复用）
        that.$requestGraphQL(paramD).then(response => {
          if (response.data[queryObj.apiConfig.ServiceCode].result === "1") {
            saveCount++;
          } else {
            saveState = false;
            msg = response.data[queryObj.apiConfig.ServiceCode].msg;
            that.$message({
              message: msg,
              type: "warning",
              duration: 2000
            });
          }
          if (saveCount == selectData.length) {
            that.$message({
              message: this.$t("org.label.MSG.disableSuccess") /*停用成功*/,
              type: "success",
              duration: 2000
            });
            that.queryTable(1);
          }
        });
      }
    },
    sendCode() {
      this.$emit("changeCode");
      // this.$emit("changeCode","")
    }
  }
};
</script>
<style scoped>
section[popupskey="compKey6"] {
  display: none;
}
</style>
