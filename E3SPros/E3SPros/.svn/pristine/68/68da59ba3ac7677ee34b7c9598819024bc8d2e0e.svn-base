<!--
* description: 客户管理
* author: laimzh
* createdDate: 2019-08-14
-->
<template>
  <div class="app-container app-container-table">
    <one-table-template
      ref="multipleTable"
      :dynamicButtons="tableButtons"
      :dynamicComponents="tableComponents"
      :dynamicSearchField="searchField"
      :dynamicApiConfig="apiConfig"
      :dynamicTableCols="tableCols"
      :dynamicFormFields="formField"
      :dynamicIsShowSelect="false"
      :dynamicIsShowMoreBtn="true"
    />
   
    <!-- 新增，编辑弹窗（个人 -->
    <!-- <editPer
      :dynamicEditRowData="editPerRowData"
      :popupsVisible="editPerPopupsVisible"
      :key="editPerPopupsKey"
      :popupsState="editPerPopupsState"
      @close="editPerclose"
    ></editPer> -->
    <!-- 新增编辑弹窗（公司 -->
    <!-- <editCom
      :dynamicEditRowData="editComRowData"
      :popupsVisible="editComPopupsVisible"
      :key="editComPopupsKey"
      :popupsState="editComPopupsState"
      @close="editComclose"
    ></editCom> -->
    <!-- <editPer
      @changeCode="handeditPerVisibleFunc"
      :dialogVisible="editPerVisible"
    />
    <editCom @changeCode="handeditComVisibleFunc" :dialogVisible="editComVisible" />-->
    <!-- <edit
      :dynamicEditRowData="editRowData"
      :popupsVisible="editPopupsVisible"
      :key="editPopupsKey"
      :popupsState="editPopupsState"
      @close="close"
    ></edit>-->
  </div>
</template>
<script>
import { oneTableWithViewTemplateMixins } from "@/components/mixins/oneTableWithViewTemplateMixins";
import { crmApis } from "@/api/graphQLApiList/crm";
import { requestGraphQL } from "@/api/commonRequest";
import OneTableTemplate from "@/components/crm/Template/crmonePage";
// import Edit from "./edit";
import editPer from "./editPer";
import editCom from "./editCom";
export default {
  name: "CustInfo",
  // 组件混入对象
  mixins: [oneTableWithViewTemplateMixins],
  components: {
    OneTableTemplate,
    editPer,
    // editCom
    // Edit
  },
  data() {
    return {
      currentRow: null,
      editPerPopupsVisible: false,//新增编辑弹窗（个人
      editPerPopupsKey: "",// 新增、编辑弹窗Key（个人
      editPerPopupsState: "",// 新增、编辑弹窗状态（add/edit/view）（个人
      editPerRowData: {},// 新增、编辑行对象（个人
      editComPopupsVisible: false,//新增编辑弹窗（公司
      editComPopupsKey: "",//新增、编辑弹窗Key（公司
      editComPopupsState: "",// 新增、编辑弹窗状态（add/edit/view）（公司
      editComRowData: {},// 新增、编辑行对象（公司
      newTable: [],
      apiConfig: crmApis.mdmDlrCustInfoQuery,//专营店客户信息查询api
      // 动态组件-按钮
      tableButtons: [
        {
          compKey: "btnKey3",
          type: "",
          size: "small",
          clickEvent: () => this.addPer(),
          text: "新增个人客户"
        },
        {
          compKey: "btnKey4",
          type: "",
          size: "small",
          clickEvent: () => this.addCom(),
          text: "新增公司客户"
        },
      ],
      // 动态组件-查询条件
      tableComponents: [
        {
          compKey: "compKey1",
          labelName: "客户名称",
          codeField: "custName",
          component: () => import("@/components/org/commonInput"),
          type: "inputText",
          isMust: false
          //  popups: {type: 'propus', key: 'key1', state: false, component: () => import('@/components/org/orgDlr/orgDlr')}
        },
        {
          compKey: "compKey2",
          labelName: "电话",
          codeField: "phone",
          component: () => import("@/components/org/commonInput"),
          type: "inputText",
          isMust: false
        },
        {
          compKey: "compKey3",
          labelName: "车牌号",
          codeField: "carLicenseNo",
          component: () => import("@/components/org/commonInput"),
          type: "inputText",
          isMust: false
        },
        {
          compKey: "compKey4",
          labelName: "VIN码",
          codeField: "vin",
          component: () => import("@/components/org/commonInput"),
          type: "inputText",
          isMust: false
        },

        {
          compKey: "compKey5",
          labelName: "UID",
          codeField: "uid",
          component: () => import("@/components/org/commonInput"),
          type: "inputText",
          isMust: false
        },

        {
          compKey: "compKey6",
          labelName: "客户类型",
          lookuptype: "LX011",
          codeField: "custClassCode",
          component: () => import("@/components/org/LookupValue"),
          type: "dropdownList",
          isMust: false
        },
        {
          compKey: "compKey7",
          labelName: "是否会员",
          codeField: "isMember",
          component: () => import("@/components/crm/Select/ONEID/sct_YesOrNo"),
          type: "dropdownList",
          isMust: false
        },
        {
          compKey: "compKey8",
          labelName: "忠诚度级别",
          codeField: "classLevel",
          component: () =>
            import("@/components/crm/Select/ONEID/sct_AduitStatus"),
          type: "dropdownList",
          isMust: false
        }
      ],
      // 动态生成网格列
      tableCols: [
        {
          prop: "controlBtn",
          label: "操作",
          codeField: "controlBtn",
          width: 120,
          align: "center",
          isComponent: true,
          comps: [
            {
              compKey: "propKey1",
              labelName: "修改",
              codeField: "editControlBtn",
              clickEvent: (index)=>{
                this.edit(index)
              },
              component: () => import("@/components/org/linkButton"),
              align: "center"
            },
            {
              compKey: "propKey2",
              labelName: "详情",
              codeField: "editControlBtn",
              clickEvent: (index) => this.detail(index),
              component: () => import("@/components/org/linkButton"),
              align: "center"
            }
          ]
        },
        { prop: "uid", label: "UID", width: null, align: "center" },
        { prop: "carBrandName", label: "类型", width: null, align: "center" },
        { prop: "custName", label: "客户名称", width: null, align: "center" },
        { prop: "phone", label: "电话", width: null, align: "center" },
        { prop: "custClassName", label: "客户类型", width: null, align: "center" },
        { prop: "genderName", label: "性别", width: null, align: "center" },
        { prop: "vin", label: "VIN码", width: null, align: "center" },
        { prop: "isMemberName", label: "是否会员", width: null, align: "center" },
        { prop: "classLevel", label: "忠诚度级别", width: null, align: "center" },
        { prop: "custClassCode", label: "客户类型编码", width: null, align: "center",hidden:true },
        { prop: "dlrCustNo", label: "专营店客户编码", width: null, align: "center",hidden:true },
        { prop: "custNo", label: "客户类型编码", width: null, align: "center",hidden:true },
        // {dlrCustNo
        //   prop: "updateControlId",
        //   label: "并发控制",
        //   width: 0,
        //   align: "center",
        //   hidden: true
        // },
        // {
        //   prop: "primaryID",
        //   label: "主键",
        //   width: 0,
        //   align: "center",
        //   hidden: true
        // }
      ],
      //是否显示table下面的组件
      isShowComponent: false,
      //表单查询数据
      formField: {
        custName: "",
        phone: "",
        carLicenseNo: "",
        vin: "",
        uid: "",
        custClassCode: "",
        isMember: "",
        classLevel:""
      }
    };
  },
  methods: {
   //修改客户信息
    edit(currentRow) {
    
      let selectData = this.$refs.multipleTable.list[currentRow];
      selectData.status="edit"
       if (selectData.custClassCode == "0") {
      this.$router.push({ name: "editPer", params: selectData });
       }
       if (selectData.custClassCode == "1") {
      this.$router.push({ name: "editCom", params: selectData });
       }
    },
    // 详情
    detail(currentRow){
      let selectData = this.$refs.multipleTable.list[currentRow];
      if (selectData.custClassCode == "0") {
      this.$router.push({ name: "PerInfo", params: selectData });
       }
       if (selectData.custClassCode == "1") {
      this.$router.push({ name: "ComInfo", params: selectData });
       }
    },
    //查看客户视图
    // viewCust() {},
    // 弹窗出现方法
    addPer() {
      let selectData={}
      selectData.status="add"
      this.$router.push({ name: "editPer", params: selectData });
    },
    addCom() {
      let selectData={}
      selectData.status="add"
      this.$router.push({ name: "editCom", params: selectData });
    },
    showaddPer(type) {
      this.editPerPopupsState = type;
      this.editPerPopupsVisible = true;
      this.editPerPopupsKey = this.$utils.generateId();
    },
    handeditPerVisibleFunc(val) {
    
      this.editPerPopupsVisible = false;
    },
    // 关闭个人维护弹窗
    editPerclose(type) {
      this.editPerPopupsVisible = false;
      this.editPerPopupsKey = this.$utils.generateId();
    },
    // 弹窗出现方法
    showaddCom(type) {
      this.editComPopupsState = type;
      this.editComPopupsVisible = true;
      this.editComPopupsKey = this.$utils.generateId();
    },
    handeditComVisibleFunc(val) {
      
      this.editComPopupsVisible = false;
    },
    // 关闭公司维护弹窗
    editComclose(type) {
      this.editComPopupsVisible = false;
      this.editComPopupsKey = this.$utils.generateId();
    }
  }
};
</script>
